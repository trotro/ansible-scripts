# deploy VM in cloudstack
# FROM https://github.com/resmo/ansible-cloudstack-example
---
- name: cloud base setup
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
#  - name: upload ssh key to cloudstack
#    cs_sshkeypair:
#      name: tabKey
#      public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: ensure security groups exist
    cs_securitygroup:
      name: "{{ item }}"
    with_items:
    - defaultGuestNetwork
    - demo

  - name: add inbound SSH to security group demo
    cs_securitygroup_rule:
      security_group: demo
      start_port: "{{ item }}"
      end_port: "{{ item }}"
    with_items:
    - 22

  - name: add inbound tcp rules to security group demo
    cs_securitygroup_rule:
      security_group: demo
      start_port: "{{ item }}"
      end_port: "{{ item }}"
    with_items:
    - 80

- name: install VMs in the cloud
  hosts: demo
  connection: local
  gather_facts: no
  tasks:
  - name: create VMs on cloudstack
    cs_instance:
      name: "{{ inventory_hostname_short }}"
      group: demo
      template: Debian 7 - Minimal - 64bits
      service_offering: t1.pico
      security_groups:
      - demo
      ssh_key: thatKey
    register: vm

  - name: print VM infos
    debug: msg="VM {{ inventory_hostname }} {{ vm.default_ip }}"

  - name: assing IP to the inventory
    set_fact: ansible_ssh_host={{ vm.default_ip }}

  - name: waiting for SSH to come up
    wait_for: port=22 host={{ vm.default_ip }} delay=5


- name: install nodeJS engine
  remote_user: root
  hosts: demo
  pre_tasks:
  - name: update system (may take a while)
    apt: update_cache=yes

  - name: install packages
    apt: pkg={{ item }}
    with_items:
    - node

#  - name: ensure services are running
#    service: name={{ item }} state=started enabled=yes
#    with_items:
#    - node

#  - name: wait for ghost to be up
#    wait_for: port=80 delay=10

  post_tasks:
  - name: finished
    debug: msg="setup of node done on {{ vm.default_ip }}"
#    debug: msg='Open your browser http://{{ vm.default_ip }}'
